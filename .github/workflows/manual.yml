# This is a basic workflow that is manually triggered

name: boot_merger workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string


env:
  REPO_URL: https://github.com/rockchip-linux/rkbin
  REPO_BRANCH: master
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: 开始设置编译所需环境
      run: |
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

    # Runs a single command using the runners shell
    - name: 下载源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH rkbin
        ln -sf /workdir/rkbin $GITHUB_WORKSPACE/rkbin

    - name: 开始编译固件
      id: compile
      run: |
        cd rkbin
        ./tools/boot_merger ../rkbin/RKBOOT/RK3568MINIALL.ini
        echo "::set-output name=status::success"
        ls  ${{ github.workspace }}

    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin文件夹(固件+ipk)在github空间
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: loader${{ env.FILE_DATE }}
        path: rkbin/img/rk1x

    - name: 整理固件文件夹
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd rkbin/img/rk1x
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: 上传固件在github空间
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: loader_bin${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
